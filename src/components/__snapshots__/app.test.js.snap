// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render App matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    possibleMatches={
      Array [
        Object {
          "match": "P = 2l + 2w",
          "value": "Rectangle Perimeter",
        },
        Object {
          "match": "A = lw",
          "value": "Rectangle Area",
        },
        Object {
          "match": "P = 2a + 2b",
          "value": "Parallelogram Perimeter",
        },
        Object {
          "match": "A = bh",
          "value": "Parallelogram Area",
        },
        Object {
          "match": "P = b + a + B + d",
          "value": "Trapezoid Perimeter",
        },
        Object {
          "match": "A = ½h(B+b)",
          "value": "Trapezoid Area",
        },
        Object {
          "match": "P = s₁ + s₂ + s₃",
          "value": "Triangle Perimeter",
        },
        Object {
          "match": "A = ½bh",
          "value": "Triangle Area",
        },
        Object {
          "match": "a + b + c = 180°",
          "value": "Triangle Angle",
        },
        Object {
          "match": "SA = 2lw + 2wh + 2lh",
          "value": "Rectangular Solid Surface Area",
        },
        Object {
          "match": "V = lwh",
          "value": "Rectangular Solid Volume",
        },
        Object {
          "match": "P = 2πr ",
          "value": "Circle Circumference",
        },
        Object {
          "match": "A = πr²",
          "value": "Circle Area",
        },
        Object {
          "match": "LSA = 2πrh",
          "value": "Cylinder Lateral Surface Area",
        },
        Object {
          "match": "SA = 2πrh + 2πr²",
          "value": "Cylinder Surface Area",
        },
        Object {
          "match": "V = πr²h",
          "value": "Cylinder Volume",
        },
        Object {
          "match": "LSA = πrl",
          "value": "Cone Lateral Surface Area",
        },
        Object {
          "match": "SA = πr² + πrl",
          "value": "Cone Surface Area",
        },
        Object {
          "match": "V =¹/₃πr²h",
          "value": "Cone Volume",
        },
        Object {
          "match": "SA = 4πr²",
          "value": "Sphere Surface Area",
        },
        Object {
          "match": "V =⁴/₃πr³",
          "value": "Sphere Volume",
        },
        Object {
          "match": "V = 0.01p + 0.05n + 0.1d + 0.25q",
          "value": "Money Totals",
        },
        Object {
          "match": "C° = ⁵/₉(F° - 32)",
          "value": "Temperature Conversion",
        },
        Object {
          "match": "rt = d",
          "value": "Distance Rate",
        },
        Object {
          "match": "T = rP",
          "value": "Percentage",
        },
        Object {
          "match": "A = P(1 + r)ʸ",
          "value": "Interest",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "addClickOutsideEventListener": [Function],
      "children": <div>
        <Header
          matches={6}
          newGame={[Function]}
          onChange={[Function]}
        />
        <Match
          cards={Array []}
          checkMatch={[Function]}
          clearMatch={[Function]}
          newGame={[Function]}
        />
        <a
          href="https://pixabay.com/photo-1426892/"
        >
          source of card image
        </a>
      </div>,
      "removeClickOutsideEventListener": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header
            matches={6}
            newGame={[Function]}
            onChange={[Function]}
          />,
          <Match
            cards={Array []}
            checkMatch={[Function]}
            clearMatch={[Function]}
            newGame={[Function]}
          />,
          <a
            href="https://pixabay.com/photo-1426892/"
          >
            source of card image
          </a>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "matches": 6,
            "newGame": [Function],
            "onChange": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "cards": Array [],
            "checkMatch": [Function],
            "clearMatch": [Function],
            "newGame": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "source of card image",
            "href": "https://pixabay.com/photo-1426892/",
          },
          "ref": null,
          "rendered": "source of card image",
          "type": "a",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "addClickOutsideEventListener": [Function],
        "children": <div>
          <Header
            matches={6}
            newGame={[Function]}
            onChange={[Function]}
          />
          <Match
            cards={Array []}
            checkMatch={[Function]}
            clearMatch={[Function]}
            newGame={[Function]}
          />
          <a
            href="https://pixabay.com/photo-1426892/"
          >
            source of card image
          </a>
        </div>,
        "removeClickOutsideEventListener": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Header
              matches={6}
              newGame={[Function]}
              onChange={[Function]}
            />,
            <Match
              cards={Array []}
              checkMatch={[Function]}
              clearMatch={[Function]}
              newGame={[Function]}
            />,
            <a
              href="https://pixabay.com/photo-1426892/"
            >
              source of card image
            </a>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "matches": 6,
              "newGame": [Function],
              "onChange": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "cards": Array [],
              "checkMatch": [Function],
              "clearMatch": [Function],
              "newGame": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "source of card image",
              "href": "https://pixabay.com/photo-1426892/",
            },
            "ref": null,
            "rendered": "source of card image",
            "type": "a",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
